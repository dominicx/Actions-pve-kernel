name: Build pve-kernel for 5.4

on:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.config54'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  REPO_URL: git://git.proxmox.com/git/pve-kernel.git
  REPO_BRANCH: pve-kernel-5.4
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
    
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        #sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        #sudo wget -qO - http://download.proxmox.com/debian/proxmox-ve-release-6.x.gpg | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add -  
        sudo wget http://download.proxmox.com/debian/proxmox-ve-release-6.x.gpg -O /etc/apt/trusted.gpg.d/proxmox-ve-release-6.x.gpg
        sudo chmod +r /etc/apt/trusted.gpg.d/proxmox-ve-release-6.x.gpg
        sudo chmod a+w /etc/apt/sources.list
        sudo -E echo "deb http://download.proxmox.com/debian/pve buster pve-no-subscription" >>/etc/apt/sources.list
        sudo -E apt-get update
        sudo -E apt-get install git nano screen patch fakeroot build-essential devscripts libncurses5 libncurses5-dev libssl-dev bc flex bison libelf-dev libaudit-dev libgtk2.0-dev libperl-dev asciidoc xmlto gnupg gnupg2 rsync lintian debhelper libdw-dev libnuma-dev libslang2-dev sphinx-common asciidoc-base automake cpio dh-python file gcc kmod libiberty-dev  libtool perl-modules python-minimal sed tar zlib1g-dev liblz4-tool idn
        sudo -E apt-get autoremove --purge
        sudo -E apt-get clean
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@main
      if: env.SSH_ACTIONS == 'true'
      env:
         TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
         TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    - name:  Install proxmox depends
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get install libjson-perl
        git clone git://git.proxmox.com/git/proxmox-acme.git -b master proxmox-acme
        cd proxmox-acme
        sed -i "s/8.30/8.28/g" debian/control
        sed -i "s/7.64/7.58/g" debian/control 
        sed -i "s/4.7/4.4/g" debian/control
        sed -i "s/libpve-common-perl (>= 6~),/ /g" debian/control
        #sed -i "/libpve-common-perl (>= 6~),/d" debian/control
        rm src/test/*
        make clean
        make deb 
        sudo dpkg -i libproxmox-acme*.deb
        sudo -E apt-get install libpve-common-perl
        sudo -E apt-get autoremove --purge
        sudo -E apt-get clean
        
        
    - name: Clone source code
      run: |
        git clone $REPO_URL -b $REPO_BRANCH pve-kernel
        cd pve-kernel
        git reset --hard 7e2796e160db4f754438cd13cbf2b334f9c50a87
    
    - name: Fix ACS patch
      run: |
        cd pve-kernel
        sed -i "s/106 @@/105 @@/g" patches/kernel/0003-pci-Enable-overrides-for-missing-ACS-capabilities-4..patch
        sed -i "/pci_find_ext_capability(dev, PCI_EXT_CAP_ID_ACS))/d" patches/kernel/0003-pci-Enable-overrides-for-missing-ACS-capabilities-4..patch
        sed -i "s/(dev) ||/(dev))/g" patches/kernel/0003-pci-Enable-overrides-for-missing-ACS-capabilities-4..patch
    
    - name: Fix lz4 build deps
      run: |
        cd pve-kernel
        sed -i "s/lz4/liblz4-tool/g" debian/control.in
        
    - name: Freeing up disk space on CI system
      run: |
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
        df -h
        sudo apt-get remove -y '^ghc-8.*'
        sudo apt-get remove -y '^dotnet-.*'
        sudo apt-get remove -y '^llvm-.*'
        sudo apt-get remove -y 'php.*'
        sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
        sudo apt-get autoremove -y
        sudo apt-get clean
        df -h
        rm -rf /usr/share/dotnet/
        df -h
    - name: Compile the PVE kernel
      id: compile
      run: |
        cd pve-kernel
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"
  
    - name: Create Release Directory
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      run: |
        cd pve-kernel
        mkdir release
        cp *.deb release/
        cp *.ddeb release/
        
    - name: Init version number
      id: getverion
      run: |
        cd pve-kernel
        echo "::set-output name=version::$(ls abi-prev* | sed  's/abi-prev/pve-kernel/g' | sed 's/-pve//g')"
    
#    - name: SSH connection to Actions
#      uses: P3TERX/ssh2actions@main
#      if: env.SSH_ACTIONS == 'true'
#      env:
#         TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#         TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      
    - name: Upload kernel directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: ${{ format('{0}-dominicx', steps.getverion.outputs.version) }} 
        path: pve-kernel/release
